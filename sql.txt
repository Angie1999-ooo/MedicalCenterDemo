
CREATE OR REPLACE FUNCTION make_random_doctors()
CREATE OR REPLACE FUNCTION make_random_speciality()
RETURNS int AS $$
DECLARE
r record;
specialityCount int;
speciality VARCHAR[];
arr_speciality_length int;
BEGIN
specialityCount := 1;
speciality := ARRAY['Онкология', 'Дерматология', 'Кардиология', 'Хирургия', 'Психиатрия', 
'Неврология', 'Эндокринология', 'Стоматология', 'Терапия'];
arr_speciality_length := array_length(speciality, 1);
FOR i IN 1..8
LOOP
INSERT INTO speciality (speciality) VALUES
(speciality[specialityCount]);
specialityCount := specialityCount+1;
END LOOP;
RETURN specialityCount;
END;
$$ LANGUAGE  plpgsql;

SELECT make_random_speciality();



+++++++++++++++++
RETURNS int AS $$
DECLARE
r record;
specialitys record;
doctorsCount int;
names VARCHAR[];
secondnames VARCHAR[];
middlenames VARCHAR[];
education VARCHAR[];
arr_education int;
arr_names_length int;
arr_secondnames_length int;
arr_middlenames_length int;
arr_education_length int;
BEGIN
doctorsCount := 0;
names := ARRAY['Сергей', 'Антон', 'Михаил', 'Степан', 'Семен', 
'Николай', 'Василий', 'Виктор', 'Геннадий', 'Александр',
            'Владимир', 'Денис', 'Дмитрий', 'Алексей', 'Константин', 
'Евгений', 'Борис', 'Виталий', 'Станислав', 'Анатолий'];
secondnames := ARRAY['Сергеев', 'Антонов', 'Михаилов', 'Степанов', 
'Семенов', 'Николаевский', 'Васильев', 'Викторов', 'Геннадиев', 
'Александров',
            'Владимирский', 'Денисов', 'Дмитриев', 'Алексеев', 
'Константинов', 'Евгениев', 'Борисов', 'Витальев', 'Станиславский', 
'Анатольев'];
middlenames := ARRAY['Сергевич', 'Антонович', 'Михаилович', 
'Степанович', 'Семенович', 'Николаевич', 'Васильевич', 'Викторович', 
'Геннадьевич', 'Александрович',
            'Владимирович', 'Денисович', 'Дмитриевич', 'Алексеевич', 
'Константинович', 'Евгениевич', 'Борисович', 'Витальевич', 
'Станиславович', 'Анатольевич'];
education := ARRAY['МГТУ', 'МИФИ', 'МГИМО', 
'ВлГу', 'МАИ', 'МЭИ', 'РГУ', 'МГУ'];
arr_names_length := array_length(names, 1);
arr_secondnames_length := array_length(secondnames, 1);
arr_middlenames_length := array_length(middlenames, 1);
arr_education_length := array_length(education, 1);

FOR i IN 1..11000
LOOP
INSERT INTO doctor (education,first_name, second_name, middle_name,speciality) VALUES
(education[trunc(random()*arr_education_length)+1],names[trunc(random()*arr_names_length)+1],
secondnames[trunc(random()*arr_secondnames_length)+1],
middlenames[trunc(random()*arr_middlenames_length)+1],random()*7+1);
doctorsCount := doctorsCount+1;
END LOOP;
RETURN doctorsCount;
END;
$$ LANGUAGE  plpgsql;

SELECT make_random_doctors();

++++++++++++++++++++++++++++++++++

CREATE OR REPLACE FUNCTION make_random_day()
RETURNS int AS $$
DECLARE
doctorId int;
time_int time;
time_i time;
dayCount int;
arr_day_week_length int;
BEGIN
doctorId := 1;
dayCount := 0;
time_int := '07:00';
time_i := '14:00';
FOR i IN 1..20000
LOOP
INSERT INTO timetable (doctor,end_time,start_time,day_week) VALUES
(doctorId,time_i,time_int,dayCount);
if(doctorId<11000) then
doctorId := doctorId+1;
else doctorId := 1;
END if;
if(time_i<'19:00') then
time_i := time_i+interval '1 hour';
else time_i := '14:00'+interval '1 hour';
END if;
if(time_int<'12:00') then
time_int := time_int+interval '1 hour';
else time_int := '08:00'+interval '1 hour';
END if;
if(dayCount<6) then
dayCount := dayCount+1;
else dayCount := 0;
END if;
END LOOP;
RETURN dayCount;
END;
$$ LANGUAGE  plpgsql;
SELECT make_random_day();